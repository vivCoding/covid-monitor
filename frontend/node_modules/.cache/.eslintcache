[{"/Users/buitrung/covid-monitor/frontend/src/index.js":"1","/Users/buitrung/covid-monitor/frontend/src/App.js":"2","/Users/buitrung/covid-monitor/frontend/src/reportWebVitals.js":"3","/Users/buitrung/covid-monitor/frontend/src/components/Header.js":"4","/Users/buitrung/covid-monitor/frontend/src/components/GoogleMap.js":"5","/Users/buitrung/covid-monitor/frontend/src/components/CamMarker.js":"6"},{"size":500,"mtime":1617550204010,"results":"7","hashOfConfig":"8"},{"size":3768,"mtime":1617550204009,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1617550204010,"results":"10","hashOfConfig":"8"},{"size":305,"mtime":1617550204009,"results":"11","hashOfConfig":"8"},{"size":3932,"mtime":1617550204009,"results":"12","hashOfConfig":"8"},{"size":306,"mtime":1617550204009,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xkggu3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/buitrung/covid-monitor/frontend/src/index.js",[],"/Users/buitrung/covid-monitor/frontend/src/App.js",["28"],"import './App.css';\nimport GoogleMap from './components/GoogleMap';\nimport Header from './components/Header'\nimport React, { useState, useEffect } from 'react';\n\n\n\nfunction StatCard1({ label, placeholder}) {\n  return (\n    <div className=\"stat-card1\">\n      <div className=\"stat-line\">\n\n        <strong>{label}</strong>\n      </div>\n      <div>\n        <p>Total case: {placeholder}</p>\n      </div>\n      \n    \n    </div>\n  );\n}\nfunction StatCard({ label, number}) {\n  return (\n    <div className=\"stat-card\">\n      <div className=\"stat-line\">\n\n        <strong>{label}</strong>\n      </div>\n      <ProductTable\n        products={[\n          { id: 1, name: 'Walc', price: 4.9, stock: 20 },\n          { id: 2, name: 'Hilenbrand Lounge', price: 1.9, stock: 32 },\n          { id: 3, name: 'Stewart Center', price: 2.4, stock: 12 }\n          \n        ]}\n      />\n    </div>\n  );\n}\n\nvar points = [40, 100, 1, 5, 25, 10];\nfunction Sort() {\n  points.sort(function(a, b){return b-a});\n  console.log(points);\n}\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst ProductTable = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(props.products);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <table>\n    \n      <thead>\n        <tr>\n          <th>\n            Name\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('price')}\n              className={getClassNamesFor('price')}\n            >\n              Price\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('stock')}\n              className={getClassNamesFor('stock')}\n            >\n              In Stock\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.name}</td>\n            <td>${item.price}</td>\n            <td>{item.stock}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nfunction App() {\n  const [placeholder, setPlaceholder] = useState('Hi');\n\n  useEffect(() => {\n    fetch('/hello').then(res => res.json()).then(data => {\n      setPlaceholder(data.result);\n    });\n  }, []);\n\n  return(\n    \n    <div className=\"App\">\n      <Header />\n      \n      \n      <div className = \"middle\">\n        <div className = \"dashboard\">\n          <StatCard1 label=\"General Information\" placeholder={placeholder}/>\n          <StatCard label=\"Monitoring Locations\"/>\n          \n          \n          \n          \n        </div>\n        \n        <div className=\"map\">\n          <GoogleMap />\n        </div>\n        \n        \n        \n      </div>\n        \n        \n\n    </div>\n    \n  );\n}\n\nexport default App;","/Users/buitrung/covid-monitor/frontend/src/reportWebVitals.js",[],"/Users/buitrung/covid-monitor/frontend/src/components/Header.js",[],"/Users/buitrung/covid-monitor/frontend/src/components/GoogleMap.js",["29"],"import React, { Component} from 'react';\nimport CamMarker from './CamMarker'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n          showingInfoWindow: false,\n          activeMarker: {},\n          selectedPlace: {},\n          attractions: [{latitude: 40.427790, longitude: -86.916960}, // Lawson\n                  {latitude: 40.428313, longitude: -86.922457}, //Co rec sports center\n                  {latitude: 40.424995, longitude: -86.915833}, //Founders Park\n                  {latitude: 40.434460, longitude: -86.918449} //Ross Ade Stadium\n                  ]\n        }\n        \n      }\n/*\n    state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n\n    */\n\n   \n    onMarkerClick = (props, marker, e) =>\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n   \n    onMapClicked = (props) => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        })\n      }\n    };\n    \n    displayMarkers = () => {\n        return this.state.attractions.map((attractions, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: attractions.latitude,\n           lng: attractions.longitude\n         }}\n         />\n        })\n      }\n\n    \n      \n      \n\n     \n\n     \n   \n    render() {\n      return (\n        <Map google={this.props.google}\n        \n            containerStyle={{ maxWidth: \"50%\", height: \"80%\" }}\n            style={{width: '100%', height: '100%', position: 'relative'}}\n\n            initialCenter={{\n                lat: 40.4237,\n                lng: -86.9212\n            }}\n            zoom={14}\n            onClick={this.onMapClicked}>\n            \n            <Marker\n              onClick={this.onMarkerClick}\n              name={'Walc'}\n              position={{lat: 40.4274, lng: -86.9132}}\n              danger ={'Very Danger'}\n            />\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n              className=\"walc\"\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n                <h5>{this.state.selectedPlace.danger}</h5>\n              </div>\n            </InfoWindow>\n\n            <Marker\n              onClick={this.onMarkerClick}\n              name={'Stewart Center'}\n              position={{lat: 40.4250, lng: -86.9126}}\n              danger ={'Safe'}\n            />\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n                <h5 className = 'corec'>{this.state.selectedPlace.danger}</h5>\n              </div>\n            </InfoWindow>\n\n            <Marker\n              onClick={this.onMarkerClick}\n              name={'Hillenbrand Lounge'}\n              position={{lat: 40.4269, lng: -86.9264}}\n              danger ={'Safe'}\n            />\n            \n            <InfoWindow \n              \n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n                <h5 className = 'founders'>{this.state.selectedPlace.danger}</h5>\n              </div>\n            </InfoWindow>\n            \n            \n        \n\n         \n          \n        </Map>\n      )\n    }\n  }\n\n  export default GoogleApiWrapper({\n    apiKey: ('AIzaSyC3RmyXyx5rURrCYvF5RNOa8GJ8DfsFFMA')\n  })(MapContainer)\n","/Users/buitrung/covid-monitor/frontend/src/components/CamMarker.js",[],{"ruleId":"30","severity":1,"message":"31","line":43,"column":10,"nodeType":"32","messageId":"33","endLine":43,"endColumn":14},{"ruleId":"30","severity":1,"message":"34","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":17},"no-unused-vars","'Sort' is defined but never used.","Identifier","unusedVar","'CamMarker' is defined but never used."]